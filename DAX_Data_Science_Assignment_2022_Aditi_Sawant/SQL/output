/*query 1 - 1	Give me list of Customers whose First Name starts with N Or they Live in city xyz.  (Return me Customer Id, First name, Last Name, City) */
select CustomerId, FirstName, LastName, City
 from customers
 where FirstName="N%" OR City="Prague"
 
 
 /*query 2 - 2	Give me list of Tracks where unit prize range between x and y and whose composer name does not contain 'T' (Return me Track Id, Name, Composer, Unit Price) */
SELECT TrackId, Name, Composer, UnitPrice
FROM tracks
WHERE (UnitPrice BETWEEN 0 AND 1) AND NOT(Name NOT LIKE 'T%T%T' );

/*Query 3 - 1	Calculate the sum of total Invoice bill and average of total Invoice bill for each day of month (June 2020). (Return me Invoice Date, Sum of Total bill for that day, Average of Total Bill for that day)*/

SELECT invoiceDate, sum(Total), avg(Total)
FROM invoices 
WHERE InvoiceDate BETWEEN '2012-06-01' AND '2012-06-31' GROUP BY invoiceDate;

/* Query 4 - 2	Total Quantity of Each Track ID purchased so far. Sort the Track IDs in Descending order of itâ€™s total Count (Return me Track ID and its total Quantity)  */

SELECT TrackId, count(Quantity)
FROM invoice_items 
ORDER BY count(TrackId) DESC

/* Query 5 - 1	Give me list of Artist IDs,  whose none of the tracks are present in any Playlist. (Return Artist IDs and their names)*/
SELECT ArtistId, Name FROM Artists

WHERE ArtistId NOT IN (SELECT ArtistId FROM Albums WHERE AlbumId NOT IN (SELECT AlbumId FROM Tracks WHERE TrackId NOT IN (SELECT TrackId from Playlist_track

WHERE PlaylistId NOT IN (SELECT PlaylistId FROM Playlists))));

/* Query 6 - 2	Give me a list of Album ID whose Tracks are present in more than 10 playlist(Return me Album ID, it's Title and the count of playlists wherein it's tracks are present) {Use Join Statement}   */
SELECT a.AlbumId, a.Title, count(pt.PlaylistId) as playlist_count FROM albums a 
	INNER JOIN Tracks t on a.AlbumId = t.AlbumId 
	INNER JOIN playlist_track pt on t.TrackId = pt.trackId group 	by a.AlbumId, a.Title HAVING playlist_count >10 ;



